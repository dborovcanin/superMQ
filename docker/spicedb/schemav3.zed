definition user {}


definition thing {


	relation domain: domain
	relation parent_group: group

	relation role_manager: role#member
	relation manage_role_users: role#member
	relation view_role_users: role#member


	relation update: role#member
	relation share: role#member
	relation read: role#member
	relation delete: role#member
	relation set_parent: role#member
	relation connect_to_channel: role#member


	permission update_perm  =   parent_group->update_thing + domain->update_thing  + update
	permission share_perm  =   share + parent_group->share_thing  + domain->share_thing
	permission read_perm  =  read + parent_group->read_thing  + domain->read_thing
	permission delete_perm  =  delete + parent_group->delete_thing  + domain->delete_thing
	permission connect_to_channel_perm  =  connect_to_channel + parent_group->connect_thing_to_channel  + domain->connect_thing_to_channel


}

definition channel {


	relation parent_group: group

	relation role_manager: role#member
	relation manage_role_users: role#member
	relation view_role_users: role#member

	relation update: role#member
	relation share: role#member
	relation read: role#member
	relation delete: role#member
	relation set_parent: role#member
	relation connect_to_thing: role#member
	relation publish: role#member | thing
	relation subscribe: role#member | thing


	permission update_perm  =   update + parent_group->update_thing_permission
	permission share_perm  =   share + parent_group->update_thing_permission
	permission read_perm  =  read + parent_group->read_thing_permission
	permission delete_perm  =  delete + parent_group->delete_thing_permission
	permission connect_to_channel_perm  =  connect_to_thing + parent_group->connect_to_channel_permission
}

definition group {

	relation domain: domain // This can't be clubbed with parent_group, but if parent_group is unassigned then we could not track belongs to which domain, so it safe to add domain
	relation parent_group: group

	relation role_manager: role#member
	relation manage_role_users: role#member
	relation view_role_users: role#member

	relation update: role#member
	relation share: role#member
	relation read: role#member
	relation delete: role#member
	relation set_child: role#member
	relation set_parent: role#member

	relation create_thing: role#member
	relation update_thing: role#member
	relation share_thing: role#member
	relation read_thing: role#member
	relation delete_thing: role#member
	relation set_parent_group_thing: role#member
	relation connect_thing_to_channel: role#member

	relation create_channel: role#member
	relation update_channel: role#member
	relation share_channel: role#member
	relation read_channel: role#member
	relation delete_channel: role#member
	relation set_parent_group_channel: role#member
	relation connect_to_thing: role#member
	relation publish_channel: role#member
	relation subscribe_channel: role#member

	relation create_subgroup: role#member // this allows to add parent for group during the new group creation
	relation update_subgroup: role#member
	relation share_subgroup: role#member
	relation read_subgroup: role#member
	relation delete_subgroup: role#member
	relation set_child_subgroup: role#member
	relation set_parent_subgroup: role#member



	permission update_perm =	update + parent_group->update_subgroup + domain->update_group
	permission share_perm = share + parent_group->share_subgroup + domain->share_group
	permission read_perm 		=	read + parent_group->read_subgroup + domain->read_group
	permission delete_perm 		=	delete + parent_group->delete_subgroup + domain->delete_group
	permission set_child_perm 	=	set_child  + parent_group->set_child_subgroup + domain->set_child_group
	permission set_parent_perm 	=	set_parent + parent_group->set_parent_subgroup + domain->set_parent_group


	permission create_thing_permission =  create_thing + parent_group->create_thing_permission
	permission update_thing_permission =  update_thing + parent_group->update_thing_permission
	permission share_thing_permission = share_thing + parent_group->share_thing_permission
	permission read_thing_permission =  read_thing  + parent_group->read_thing_permission
	permission delete_thing_permission = delete_thing  + parent_group->delete_thing_permission
	permission set_parent_group_thing_permission = set_parent_group_thing + parent_group->set_parent_group_thing_permission
	permission connect_thing_to_channel_permission = connect_thing_to_channel


}

definition domain {

	relation update: role#member
	relation share: role#member
	relation read: role#member
	relation delete: role#member

	relation role_manager: role#member
	relation manage_role_users: role#member

	relation create_thing: role#member
	relation update_thing: role#member
	relation share_thing: role#member
	relation read_thing: role#member
	relation delete_thing: role#member
	relation set_parent_group_thing: role#member
	relation connect_to_channel: role#member

	relation create_channel: role#member
	relation update_channel: role#member
	relation share_channel: role#member
	relation read_channel: role#member
	relation delete_channel: role#member
	relation set_parent_group_channel: role#member
	relation connect_to_thing: role#member
	relation publish_channel: role#member
	relation subscribe_channel: role#member

	relation create_group: role#member
	relation update_group: role#member
	relation share_group: role#member
	relation read_group: role#member
	relation delete_group: role#member
	relation set_child_group: role#member
	relation set_parent_group: role#member

}


definition role {
	relation entity: domain | group | channel | thing
	relation member: user | team
	relation built_in_role: domain | group | channel | thing

	permission delete = entity->manage_role_perm - built_in_role->manage_role_perm
	permission update = entity->manage_role_perm - built_in_role->manage_role_perm
	permission read = entity->manage_role_perm - built_in_role->manage_role_perm

	permission add_user = entity->add_role_users_perm
	permission remove_user = entity->remove_role_users_perm
	permission view_user = entity->view_role_users_perm

	permission add_permission = entity->manage_role_perm - built_in_role->manage_role_perm
	permission remove_permission = entity->manage_role_perm - built_in_role->manage_role_perm
}




definition team {

	relation organization: organization
	relation parent_team: team

	relation delete: role#member
	relation update: role#member
	relation read: role#member

	relation set_parent : role#member
	relation set_child : role#member

	relation member: role#member

	relation manage_role: role#member
	relation add_role_users: role#member
	relation remove_role_users: role#member
	relation view_role_users: role#member


	relation delete_subteam: role#member
	relation update_subteam: role#member
	relation read_subteam: role#member

	relation member_subteam: role#member

	relation set_child_subteam: role#member
	relation set_parent_subteam: role#member

	relation manage_role_subteam: role#member
	relation add_role_users_subteam: role#member
	relation remove_role_users_subteam: role#member
	relation view_role_users_subteam: role#member

	permission delete_perm = delete->member + organization->delete_team + parent_team->delete_subteam
	permission update_perm = update->member + organization->update_team + parent_team->update_team
	permission read_perm = read->member + organization->read_group  + parent_team->read_team

	permission set_parent_perm = set_parent->member + organization->set_parent_team + parent_team->set_parent_subteam
	permission set_child_perm = set_child->member + organization->set_child_team + parent_team->set_child_subteam

	permission membership = member->member + organization->member_team + parent_team->member_subteam

	permission manage_role_perm = manage_role + organization->manage_role_team + parent_team->manage_role_subteam
	permission add_role_users_perm = add_role_users + organization->add_role_users_team + parent_team->add_role_users_subteam
	permission remove_role_users_perm = remove_role_users + organization->remove_role_users_team + parent_team->remove_role_users_subteam
	permission view_role_users_perm = view_role_users + organization->view_role_users_team + parent_team->view_role_users_subteam
}


definition organization {

	relation platform: platform

	relation delete: role#member
	relation update: role#member
	relation read: role#member

	relation member: role#member

	relation manage_role: role#member
	relation add_role_users: role#member
	relation remove_role_users: role#member
	relation view_role_users: role#member

	relation create_team : role#member

	relation delete_team: role#member
	relation update_team: role#member
	relation read_team: role#member

	relation member_team: role#member

	relation set_child_team: role#member
	relation set_parent_team: role#member

	relation manage_role_team: role#member
	relation add_role_users_team: role#member
	relation remove_role_users_team: role#member
	relation view_role_users_team: role#member

	permission delete_perm = delete->member
	permission update_perm = update->member
	permission read_perm = read->member

	permission membership = member->member

	permission create_team_perm = create_team->member

	permission manage_role_perm = manage_role
	permission add_role_users_perm = add_role_users
	permission remove_role_users_perm = remove_role_users
	permission view_role_users_perm = view_role_users

}


definition platform {
  relation administrator: user
  relation member: user

  permission admin = administrator
  permission membership = administrator + member
}definition user {}

